#!/usr/bin/env bash

set -Eeuo pipefail
exitcode=0

    printf "5.4-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-alpine3.20: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-alpine3.20' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-alpine3.19: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-alpine3.19' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-alpine3.20: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-alpine3.20' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-alpine3.19: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-alpine3.19' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-noble: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-noble' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-noble: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-noble' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-alpine3.20: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-alpine3.20' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-alpine3.19: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-alpine3.19' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-alpine3.20: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-alpine3.20' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-alpine3.19: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-alpine3.19' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-noble: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-noble' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-noble: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-noble' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-alpine3.20: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-alpine3.20' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-alpine3.19: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-alpine3.19' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-alpine3.20: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-alpine3.20' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-alpine3.19: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-alpine3.19' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-noble: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-noble' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-noble: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-noble' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-alpine3.20: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-alpine3.20' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-alpine3.19: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-alpine3.19' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-luarocks-alpine3.20: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-luarocks-alpine3.20' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-luarocks-alpine3.19: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-luarocks-alpine3.19' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-alpine3.20: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-alpine3.20' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-alpine3.19: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-alpine3.19' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-luarocks-alpine3.20: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-luarocks-alpine3.20' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-luarocks-alpine3.19: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-luarocks-alpine3.19' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-noble: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-noble' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-luarocks-noble: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-luarocks-noble' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-noble: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-noble' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-luarocks-noble: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-luarocks-noble' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-lua52compat-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-lua52compat-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi


exit "$exitcode"
