#!/usr/bin/env bash

set -Eeuo pipefail
exitcode=0

    printf "5.4-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.4-luarocks-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.4-luarocks-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.3-luarocks-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.3-luarocks-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "5.2-luarocks-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=lua" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:5.2-luarocks-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-luarocks-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-luarocks-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-luarocks-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-luarocks-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-luarocks-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-luarocks-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-luarocks-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-luarocks-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-luarocks-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-luarocks-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.1-beta-lua52compat-luarocks-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.1-beta-lua52compat-luarocks-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-luarocks-bookworm: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-luarocks-bookworm' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-luarocks-bullseye: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-luarocks-bullseye' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-luarocks-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-luarocks-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-luarocks-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-luarocks-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-luarocks-alpine3: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-luarocks-alpine3' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-luarocks-alpine3.17: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-luarocks-alpine3.17' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-luarocks-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-luarocks-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=false" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-luarocks-jammy: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-luarocks-jammy' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi

    printf "2.0-lua52compat-luarocks-focal: "
    output=$(docker run -v $(pwd)/test.sh:/test.sh -e "LANG=luajit" -e "LUAROCKS=true" --rm 'localhost:5000/ghcr.io/gui/lua-docker-build-cache:2.0-lua52compat-luarocks-focal' /test.sh 2>&1 || true)
    if [[ "$output" =~ "Lua Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo "$output"
      echo
    elif [[ "$output" =~ "Lua Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo "$output"
      echo
    fi


exit "$exitcode"
