# AUTOMATICALLY GENERATED
# DO NOT EDIT THIS FILE DIRECTLY. Edit /Dockerfile.erb and run /update instead.

FROM <%= distro %>:<%= distro_tag %>

RUN set -ex \
  <% if distro == "debian" || distro == "ubuntu" -%>
    && saved_apt_mark="$(apt-mark showmanual)" \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
      ca-certificates \
      curl \
      gcc \
      libc6-dev \
      make \
      <% if lang == "lua" -%>
        libreadline-dev \
        <% if version_minor == "5.1" -%>
          libncurses-dev \
        <% end -%>
      <% end -%>
      <% if variant.include?("luarocks") -%>
        dirmngr \
        gnupg \
        unzip \
      <% end -%>
  <% elsif distro == "alpine" -%>
    && apk add --no-cache --virtual .lua-builddeps \
      ca-certificates \
      curl \
      gcc \
      libc-dev \
      make \
      <% if lang == "lua" -%>
        readline-dev \
        <% if version_minor == "5.1" -%>
          ncurses-dev \
        <% end -%>
      <% end -%>
      <% if variant.include?("luarocks") -%>
        coreutils \
        gnupg \
        unzip \
        # rundeps
        wget \
      <% end -%>
  <% end -%>
  && curl -fsSL -o /tmp/lua.tar.gz "<%= archive_url %>" \
  && cd /tmp \
  <% if archive_sha1 -%>
    && echo "<%= archive_sha1 %> *lua.tar.gz" | sha1sum -c - \
  <% elsif archive_sha256 -%>
    && echo "<%= archive_sha256 %> *lua.tar.gz" | sha256sum -c - \
  <% end -%>
  && mkdir /tmp/lua \
  && tar -xf /tmp/lua.tar.gz -C /tmp/lua --strip-components=1 \
  && cd /tmp/lua \
  <% if lang == "luajit" && variant.include?("lua52compat") -%>
    && make CFLAGS="-DLUAJIT_ENABLE_LUA52COMPAT" \
  <% elsif lang == "luajit" || version_minor == "5.0" -%>
    && make \
  <% else -%>
    && make linux \
  <% end -%>
  && make install \
  <% if lang == "luajit" && version.prerelease? -%>
    && ln -s /usr/local/bin/luajit-<%= version_full %> /usr/local/bin/luajit \
  <% end -%>
  <% if variant.include?("luarocks") -%>
    && curl -fsSL -o /tmp/luarocks.tar.gz "https://luarocks.org/releases/luarocks-<%= luarocks_version %>.tar.gz" \
    && curl -fsSL -o /tmp/luarocks.tar.gz.asc "https://luarocks.org/releases/luarocks-<%= luarocks_version %>.tar.gz.asc" \
    && cd /tmp \
    && export GNUPGHOME="$(mktemp -d)" \
    && export GPG_KEYS="8460980B2B79786DE0C7FCC83FD8F43C2BB3C478" \
    && (gpg --batch --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys "$GPG_KEYS" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net:80 --recv-keys "$GPG_KEYS" || gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$GPG_KEYS" || gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys "$GPG_KEYS") \
    && gpg --batch --verify luarocks.tar.gz.asc luarocks.tar.gz \
    && rm -rf "$GNUPGHOME" \
    && mkdir /tmp/luarocks \
    && tar -xf /tmp/luarocks.tar.gz -C /tmp/luarocks --strip-components=1 \
    && cd /tmp/luarocks \
    && ./configure \
    && make \
    && make install \
  <% end -%>
  && cd / \
  <% if distro == "debian" || distro == "ubuntu" -%>
    && apt-mark auto '.*' > /dev/null \
    && if [ -n "$saved_apt_mark" ]; then \
      apt-mark manual $saved_apt_mark; \
    fi \
    <% if lang == "lua" -%>
      && dpkg-query --show --showformat '${package}\n' | grep -P '^libreadline[t\d]+$' | xargs apt-mark manual \
      <% if version_minor == "5.1" -%>
        && dpkg-query --show --showformat '${package}\n' | grep -P '^libncurses[t\d]+$' | xargs apt-mark manual \
      <% end -%>
    <% end -%>
    <% if variant.include?("luarocks") -%>
      && apt-mark manual \
        ca-certificates \
        curl \
        unzip \
    <% end -%>
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
    && rm -rf /var/lib/apt/lists/* /var/lib/dpkg/*-old /var/cache/* /var/log/* \
  <% elsif distro == "alpine" -%>
    && apk add --no-network --no-cache --virtual .lua-rundeps \
      <% if lang == "lua" -%>
        readline \
        <% if version_minor == "5.1" -%>
          ncurses-libs \
        <% end -%>
      <% end -%>
      <% if lang == "luajit" -%>
        libgcc \
      <% end -%>
      <% if variant.include?("luarocks") -%>
        ca-certificates \
        coreutils \
        wget \
        unzip \
      <% end -%>
    && apk del --no-network .lua-builddeps \
  <% end -%>
  && rm -rf /tmp/lua /tmp/lua.tar.gz \
  <% if variant.include?("luarocks") -%>
    && rm -rf /tmp/luarocks /tmp/luarocks.tar.gz \
    && luarocks --version \
  <% end -%>
  && <%= lang %> -v

CMD ["<%= lang %>"]

LABEL org.opencontainers.image.source="https://github.com/GUI/lua-docker" \
  org.opencontainers.image.licenses="MIT"
